#!/bin/bash

############################################################
#Function                                                  #
############################################################

#help

Help()
{
printf "\033[90m############################################################\033[0m\n"
printf "                          \033[1m\033[4mison HELP\033[0m\n"
printf "\033[90m############################################################\033[0m\n"
printf "\n"
printf "\e[1mison\e[0m give information about wanted screen session.\n"
printf "\n"
printf "Requierement : \n"
printf "	> have 'screen' installed\n"
printf "\n"
printf "\033[1mSyntaxe :\033[0m \033[94mison\033[0m [\033[94m-options\033[0m] \033[94mscreen_name\033[0m\n"
printf "\n"
printf "\033[1mOptions :\033[0m \n"
printf "	\033[94m-h\033[0m	display this message\n"
printf "	\033[94m-e\033[0m	output [exist]\n"
printf "	\033[94m-s\033[0m	output [state]\n"
printf "	\033[94m-n\033[0m	output [number]\n"
printf "	\033[94m-l\033[0m	output [number_length]\n"
printf "\n"
printf "\e[1mOutput\e[0m : exist:[\033[94mTrue\033[0m/\033[94mFalse\033[0m] state:[\033[94mon\033[0m/\033[94moff\033[0m] number[\033[94mint\033[0m] number_length[\033[94mint\033[0m]\n"
printf "\n"
printf "\033[90m############################################################\033[0m\n"
}


#search for substr in str
ExprIdx()
{
	fpos=$( echo $1 | grep -o -b "$2" | awk 'BEGIN {FS=":"}{print $1}')
	echo $fpos
}


############################################################
#Main                                                      #
############################################################

co=1
out=''
opt=False

#get options

while getopts ":hesnl:" option;
do
	case $option in
	
      		h) # display Help
         		Help
			((co++))
         		exit;;
			
		e) #exist
			out=$(echo $out'e')
			opt=True
			((co++))
			;;
			
		s) #state
			out=$(echo $out's')
			opt=True
			((co++))
			;;
			
		i) #id
			out=$(echo $out'i')
			opt=True
			((co++))
			;;
			
		n) #number
			out=$(echo $out'n')
			opt=True
			((co++))
			;;
				
         	\?) # Invalid option
         		echo "Error: Invalid option"
         		exit;;
   	esac
done

#manage pointer
p_s=$(($co))
s=${!p_s}
	
#get screen list
sl=$(screen -ls | grep '(*)' )

#get number of line (or screen)
if [[ ${#sl} != 0 ]] ; then
	nl=$( echo "${sl}" | wc -l )
else
	nl=0
fi

#default return param
exist=False
state=off
id=0
snumber=0
cnl=0


#test if it's a screen
for (( c=1; c<=$nl; c++ ))
do

	#get the line $c
	sedopt=$(echo $c'p')
	line=$(printf "$sl"| sed -n $sedopt)
	length=$((${#line} - 37))
	
	#get . index in $line
	idxl=($(ExprIdx "$line" "\."))
	
	idp=$((${idxl[0]}))
	lidx=$((${idxl[-1]} + 2))
	
	#ctrl str1
	#echo "${line:$lidx:1}"
	
	#count the length of the number (str)
	while [[ "${line:$(($lidx + $cnl)):1}" =~ ^[0-9]+$ ]] ; do
		cnl=$(($cnl + 1))
	done
	
	#get number of the screen
	if [[ $cnl != 0 ]] ; then
		snumber=${line:$lidx:$cnl}
	else
		snumber=0
	fi
	
	#ctrl str2
	#echo "input : $s"
	#echo "${line:1:$length}"
	#echo "${line:1:$idp}"
	#echo "${line:$(($idp + 2)):$(($length - $idp - 1))}"
	#echo "${line:$(($idp + 2)):$(($length - $idp))}"
	
	#test if screen Exist
	if [[ "${line:1:$length}" == "$s" ]] || [[ "${line:1:$idp}" == "$s" ]] || [[ "${line:$(($idp + 2)):$(($length - $idp - 1))}" == "$s" ]] || [[ "${line:$(($idp + 2)):$(($length - $idp))}" == "$s."* ]] ; then
		
		exist=True
		id=${line:1:$idp}
		
		#Test if the screen is Attached
		if [[ ${line} == *"(Attached)"* ]] ; then
			state=on
		fi	
		break
	fi	
done

############################################################
#out                                                       #
############################################################

if [[ $opt == "True" ]] ; then

	#-e
	if [[ $out == *"e"* ]] ; then
		printf "$exist "
	fi
	
	#-s
	if [[ $out == *"s"* ]] ; then
		printf "$state "
	fi
	
	#-i
	if [[ $out == *"i"* ]] ; then
		printf "$id "
	fi
	
	#-n
	if [[ $out == *"n"* ]] ; then
		printf "$snumber "
	fi
	
	printf "\n"
else
	printf "$exist $state $id $snumber \n"
fi

