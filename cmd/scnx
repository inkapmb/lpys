#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Aug 17 13:43:04 2023

@author: mahjoubp
"""

import numpy as np
import subprocess
import sys ,os ,time, shutil

#SCNX

#function def -----------------------------------------------------------------

#classic

def getOA():
    
    opt = []
    arg = []
    
    for aIn in sys.argv :
        
        if aIn != sys.argv[0] :
            if aIn[0] == '-' :
                opt.append(aIn)
            
            else :
                arg.append(aIn)
        
    return opt, arg



#personnalised

def pHelp() :
    print( "\033[90m############################################################\033[0m" )
    print( "                       \033[1m\033[4mscnx HELP\033[0m" )
    print( "\033[90m############################################################\033[0m" )
    print( "" )
    print( "scnx command allows to connect to screen while opennig them in an other terminal")
    print( "" )
    print( "Requierement : " )
    print( "	> have 'screen' installed" )
    print( "	> have 'Konsole' installed" )
    print( "	(> if it is used on server, be connected in ssh -X (graphic options))" )
    print( "" )
    print( "\033[1mSyntaxe :\033[0m \033[94mscnx\033[0m [\033[94m-options\033[0m] [\033[94mscreen_name\033[0m]" )
    print( "" )
    print( "\033[1mOptions :\033[0m " )
    print( "	\033[94m-h\033[0m	display this message" )
    print( "" )
    print( "\033[90m############################################################\033[0m" )
        
    
def wrn() :
     print( "\033[5m\033[1m\033[93m<!>\033[0m\033[25m" , end='')
     
def sliceRes(rawRes) :
    
    idx_list = []
    idx = 0
    
    for char in rawRes :
        if char == ' ' :
            idx_list.append(idx)
            
        idx += 1
    
    # idx_list.append(-1)
    res = []
    
    lidx = 0
    
    for idx in idx_list :
        
        if idx != -1 :
            res.append(bool(int(rawRes[lidx:idx])))
            lidx = idx
            
        else :
            print(rawRes[lidx+1:])
            res.append(bool(int(rawRes[lidx+1:])))
    
    return res

#clear lines
def clear(n) :
    
    print('\033[' + str(n) + 'A', end='')
    
    for i in range(n) :
        print('                                                                                ')
        
    print('\033[' + str(n) + 'A', end='')
     
     

# MAIN ------------------------------------------------------------------------

opts, args = getOA()

for o in opts :
    
    if o == '-h' :
        pHelp()


slicedRes = [False, False]
nsnp = True
clear_lines = False


if len(args) > 0 :

    screen_name = args[0]
    result = subprocess.getoutput("ison -e -s " + screen_name)
    slicedRes = sliceRes(result)
    
    nsnp = False


while not np.all(slicedRes) : 
    
    if not nsnp :
        
        if clear_lines :
            clear(4)
        
        #msg
        if not slicedRes[0] :
            wrn()
            print(' Screen does not exist ! ')
            add_line = 1
        
        elif not slicedRes[1] :
            wrn()
            print(' Screen is already open in a terminal ! ')
            add_line = 1
        
        else : add_line = 0
        
    
    nsnp = False
    clear_lines = True
    
    if subprocess.getoutput("screen -ls | grep '(*)' ") != '' :
    
        print('Existing screen are : ')
        print(subprocess.getoutput("screen -ls | grep '(*)' "))

        screen_name = input('Choose one screen above : ')
        result = subprocess.getoutput("ison -e -s " + screen_name)
        slicedRes = sliceRes(result)
        
    else : 
        print('There is no screen existing... ')
        break
    
if np.all(slicedRes) :
    os.system( 'konsole -e bash -c "screen -r ' + str(screen_name) + '" & disown' )
    
    
    

        
