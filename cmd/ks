#!/bin/bash

############################################################
#Function                                                  #
############################################################

#Help

Help()
{
printf "\033[90m############################################################\033[0m\n"
printf "                          \033[1m\033[4mks HELP\033[0m\n"
printf "\033[90m############################################################\033[0m\n"
printf "\n"
printf "ks command force the end of a screen session (kill process).\n"
printf "\n"
printf "Requierement : \n"
printf "	> have 'screen' installed\n"
printf "	> have 'Konsole' installed\n"
printf "	(> if it is used on a server, be connected in ssh -X (graphic options))\n"
printf "\n"
printf "\033[1mSyntaxe :\033[0m \033[94mks\033[0m [\033[94m-options\033[0m] [\033[94mscreen_name\033[0m]\n"
printf "\n"
printf "\033[1mOptions :\033[0m \n"
printf "	\033[94m-h\033[0m	display this message\n"
printf "\n"
printf "\n"
printf "\033[90m############################################################\033[0m\n"
}


#search for substr in str
ExprIdx()
{
	fpos=$( echo $1 | grep -o -b "$2" | awk 'BEGIN {FS=":"}{print $1}')
	echo $fpos
}

#warning sign
wrn()
{
	printf "\033[5m\033[1m\033[93m<!>\033[0m\e[25m"
}

#exist msg
sde_msg()
{
	printf " \033[1m$1\033[0m does not \e[38;5;210mexist\e[0m.\n"
}

############################################################
#Main                                                      #
############################################################

#def var

co=1

#get options

while getopts ":h" option;
do
	case $option in
	
      		h) # display Help
         		Help
			((co++))
         		exit;;
				
         	\?) # Invalid option
			wrn
         		echo "Error: Invalid option"
         		exit;;
   	esac
done


#manage pointer
p_s_name=$(($co))
s_name=${!p_s_name}


#verify
if [[ ${#s_name} == 0 ]]; then
	wrn
	printf " Error : No screen name provided.\n"
	exit;
fi

#test if screen already exist with this name
res=($(ison $s_name))

#echo $res

#Test if screen exist and get proc id
if [[ ${res[0]} == "True" ]] ; then
	
	sid=${res[2]}
	
elif [[ $res == "True "* ]] ; then
	wrn
	sde_msg $s_name
fi

#kill processus

kill $sid

