#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Aug 17 13:43:04 2023

@author: mahjoubp
"""

import numpy as np
import subprocess
import sys ,os ,time, shutil

#LNS

#function def -----------------------------------------------------------------

#classic

def getOA():
    
    opt = []
    arg = []
    
    for aIn in sys.argv :
        
        if aIn != sys.argv[0] :
            if aIn[0] == '-' :
                opt.append(aIn)
            
            else :
                arg.append(aIn)
        
    return opt, arg



#personnalised

def pHelp() :
    print( "\033[90m############################################################\033[0m" )
    print( "                          \033[1m\033[4mlns HELP\033[0m" )
    print( "\033[90m############################################################\033[0m" )
    print( "" )
    print( "lns command launch command in an other 'screen' and open it in a new terminal." )
    print( "" )
    print( "Requierement : " )
    print( "	> have 'screen' installed" )
    print( "	> have 'Konsole' installed" )
    print( "	(> if it is used on a server, be connected in ssh -X (graphic options))" )
    print( "" )
    print( "\033[1mSyntaxe :\033[0m \033[94mlns\033[0m [\033[94m-options\033[0m] \033[94mcmd\033[0m [\033[94mscreen_name\033[0m]" )
    print( "" )
    print( "\033[1mOptions :\033[0m " )
    print( "	\033[94m-h\033[0m	display this message" )
    print( "	\033[94m-c\033[0m	close screen after execution" )
    print( "" )
    print( "" )
    print( "\033[90m############################################################\033[0m" )
        
    
def wrn() :
     print( "\033[5m\033[1m\033[93m<!>\033[0m\033[25m" , end='')
     

#looking for point idx
def lfp(iStr) :
    
    idx_list = []
    idx = 0
    
    for char in iStr :
        if char == '.' :
            idx_list.append(idx)
        
        idx += 1
    
    return idx_list
          
             
     
# MAIN ------------------------------------------------------------------------

opts, args = getOA()

for o in opts :
    
    if o == '-h' :
        pHelp()



#Init var
exist = True
num = 1
cmd = ''
nd = False
rnd = False


#if no screen name is provided
if len(args) == 0 :
    screen_name = 'screen.1'
    nd = True
    
elif len(args) >= 1 :
    screen_name = args[0]
    
    if len(args) == 2 :
        cmd = args[1]


#test name and rename
while exist :
    
    exist = bool(int(subprocess.getoutput("ison -e " + screen_name)))
    
    #if already exist rename
    if exist :
        
        rnd = True
        
        pidx = lfp(screen_name)
        
        # print(pidx)
        
        #if ther is a '.' at the end
        if pidx[-1] == len(screen_name) - 1 :
            screen_name = screen_name + str(num)
        
        #if there is already a numbering        
        elif int(screen_name[pidx[-1]+1:]) == num :
            screen_name = screen_name[:pidx[-1] + 1] + str(num + 1)
            
        #if there is no numbering and no '.' at the end
        else : 
            screen_name = screen_name + '.' + str(num)
        
        num += 1

#renamed msg
if nd :
    wrn()
    print(' Screen session was named : ' + screen_name)

elif rnd and not nd :
    wrn()
    print(' Screen session was renamed : ' + screen_name)


#create screen
if cmd != '' :
    os.system( 'screen -dmS ' + screen_name + ' bash -c "' + cmd + '"' )
else : 
    os.system( 'screen -dmS ' + screen_name )


#connect it in new terminal
os.system( 'konsole -e bash -c "screen -r ' + screen_name + '" & disown > /dev/null 2> /dev/null' )


    
    
    

        
